{
  "name": "@ts-fullstack-template/desktop-builder",
  "version": "1.0.0",
  "license": "MIT",
  "author": {
    "name": "Ryuichi Nishi",
    "email": "ryucihi.nishi24@gmail.com",
    "url": "https://github.com/ryuichi24"
  },
  "type": "module",
  "scripts": {
    "dev": "yarn rebuild:electron",
    "dev:web": "yarn rebuild:node",
    "build:publish": "yarn clean:release && yarn build:package-json && tsx scripts/rebuild.ts && yarn aggregate && cross-env ELECTRON_PUBLISH=true tsx scripts/build.ts",
    "build:local": "yarn clean:release && yarn build:package-json && tsx scripts/rebuild.ts && yarn aggregate && cross-env ELECTRON_PUBLISH=false tsx scripts/build.ts",
    "aggregate": "tsx scripts/aggregate-artifacts.ts",
    "rebuild:node": "cross-env BUILD_MODE=node tsx scripts/rebuild-dev",
    "rebuild:electron": "cross-env BUILD_MODE=electron tsx scripts/rebuild-dev",
    "rebuild:initial": "cross-env BUILD_MODE=initial tsx scripts/rebuild-dev",
    "build:package-json": "tsx scripts/make-production-package-json.ts",
    "clean:release": "node -e \"require('fs').rmSync('release', { recursive: true, force: true });\"",
    "encode:base64": "node -e \"const fs = require('fs'); const path = require('path'); const filePath = process.argv[1]; if (!filePath) { console.error('Please provide a file path.'); process.exit(1); } const fileContents = fs.readFileSync(path.resolve(filePath)); const encodedContents = fileContents.toString('base64'); fs.writeFileSync('encoded_p12.txt', encodedContents); console.log('.p12 file encoded in base64 and saved to encoded_p12.txt');\"",
    "postinstall": "yarn rebuild:initial"
  },
  "devDependencies": {
    "@electron/rebuild": "^3.6.0",
    "@ts-fullstack-template/tsconfig": "*",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron-builder": "^24.13.3",
    "tsx": "^4.7.1",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@ts-fullstack-template/desktop-bg-server": "*",
    "@ts-fullstack-template/desktop-main": "*",
    "@ts-fullstack-template/desktop-renderer": "*"
  }
}
